,lambda1= 0.1
,lambda2= 0.1
,lambda3= 0.1
, EI= 10
, EI1= 10
, EI2= 10
, N1=N1
, N2=N2
)
X_ini<-c(S1_1=N1/4-10
, S2_1=N1*2/4-10
, S3_1=N1/4-10
, EP1_1=0
, EP2_1=0
, EP3_1=0
, E1_1=0
, E2_1=0
, E3_1=0
, IP1_1_1=5
, IP1_2_1=2
, IP1_3_1=2
, IP1_4_1=1
, IP2_1_1=2
, IP2_2_1=5
, IP2_3_1=2
, IP2_4_1=1
, IP3_1_1=0
, IP3_2_1=1
, IP3_3_1=4
, IP3_4_1=5
, I1_1_1=0
, I1_2_1=0
, I1_3_1=0
, I1_4_1=0
, I2_1_1=0
, I2_2_1=0
, I2_3_1=0
, I2_4_1=0
, I3_1_1=0
, I3_2_1=0
, I3_3_1=0
, I3_4_1=0
, D1_1=0
, D2_1=0
, D3_1=0
, R1_1=2.5
, R2_1=2.5
, R3_1=2.5
, Y1_2_1=2
, Y1_3_1=2
, Y1_4_1=1
, Y2_2_1=5
, Y2_3_1=2
, Y2_4_1=1
, Y3_2_1=1
, Y3_3_1=4
, Y3_4_1=5
, S1_2=N2/4-10
, S2_2=N2*2/4-10
, S3_2=N2/4-10
, EP1_2=0
, EP2_2=0
, EP3_2=0
, E1_2=0
, E2_2=0
, E3_2=0
, IP1_1_2=5
, IP1_2_2=2
, IP1_3_2=2
, IP1_4_2=1
, IP2_1_2=2
, IP2_2_2=5
, IP2_3_2=2
, IP2_4_2=1
, IP3_1_2=0
, IP3_2_2=1
, IP3_3_2=4
, IP3_4_2=5
, I1_1_2=0
, I1_2_2=0
, I1_3_2=0
, I1_4_2=0
, I2_1_2=0
, I2_2_2=0
, I2_3_2=0
, I2_4_2=0
, I3_1_2=0
, I3_2_2=0
, I3_3_2=0
, I3_4_2=0
, D1_2=0
, D2_2=0
, D3_2=0
, R1_2=2.5
, R2_2=2.5
, R3_2=2.5
, Y1_2_2=2
, Y1_3_2=2
, Y1_4_2=1
, Y2_2_2=5
, Y2_3_2=2
, Y2_4_2=1
, Y3_2_2=1
, Y3_3_2=4
, Y3_4_2=5
)
sum(X_ini[-grep('Y',names(X_ini))]) #bien
X_ini <- c(X_ini, rep(3, 4))
names(X_ini)[ (length(X_ini)-3):length(X_ini)] <- c('bet1', 'bet2', 'bet12', 'bet21')
X_ini
#source("ModeloMigracion_2pErlang.R")
days <- 50
tiempos <- seq(0, days ,length = days*100+1)
sim <- X_theta(theta, tiempos, X_ini)
xx<-seq(1,days,1)
colnames(sim)
colnames(sim[, 11:34])
plot(tiempos, apply(sim[, 11:34], 1, sum), type='l')
library(deSolve)
rm(list=ls())
r0curve<-function(t,ini,fin,cte){
res<-ini
if(t>23)res<-(fin+(ini-fin)*exp(-(t-23)/cte))
return(res)
}
evenfun <- function(t, X_ini, parms)
{
#bet1 <-r0curve(t, ini= 3.0, fin= 1.4,cte=10)
#bet2 <-r0curve(t,ini= 3.0,fin= 1.4,cte=10)
#bet12 <-(r0curve(t,ini= 3.0,fin=1.4,cte=10))
#bet21 <-(r0curve(t,ini= 3.0,fin=1.4,cte=10))
X_ini[['bet1']] <- ifelse( t< 23, 1  , .4)
X_ini[['bet2']] <- ifelse( t< 23, 1 , .4)
X_ini[['bet12']] <- ifelse( t< 23, 1 , .4)
X_ini[['bet21']] <- ifelse( t< 23, 1 , .4)
return(X_ini)
}
X_theta <- function(theta,t=tiempos, X_ini){
SEIRmod <- function(t, x, theta) {
params <- as.list(c(theta, x))
with(params,
{
#bet1<<-r0curve(t, ini= 3.0, fin= 1.4,cte=10)*EI
#bet2<<-r0curve(t,ini= 3.0,fin= 1.4,cte=10)*EI
#bet12<<-(r0curve(t,ini= 3.0,fin=1.4,cte=10)*EI2)/5
#bet21<<-(r0curve(t,ini= 3.0,fin=1.4,cte=10)*EI1)/10
#bet1 <- 3.04#ifelse(t<0.2,bet1,1.2*EI)
#bet2 <- 3.04#felse(t<0.2,bet2,1.2*EI)
#bet12 <-3.04 #ifelse(t<0.2,bet12,1.2*EI/5)
#bet21 <-3.04 #ifelse(t<0.2,bet21,1.2*EI/10)
#browser()
#if(round(t)%%100==0)
cat("t:", t,"    bet1:", round(bet1 , 2),
"    bet2:", round(bet2, 2),
"    bet12:", round(bet12, 2), "    bet21:", round(bet21, 2),"\n")
dS1_1 <- -bet1*S1_1*(I1_1_1+I1_2_1+I1_3_1+I1_4_1+I2_1_1+I2_2_1+I2_3_1+I2_4_1+I3_1_1+I3_2_1+I3_3_1+I3_4_1)/N1-
bet12*S1_1*(I1_1_2+I1_2_2+I1_3_2+I1_4_2+I2_1_2+I2_2_2+I2_3_2+I2_4_2+I3_1_2+I3_2_2+I3_3_2+I3_4_2)/N2
dS2_1 <- -bet1*S2_1*(I1_1_1+I1_2_1+I1_3_1+I1_4_1+I2_1_1+I2_2_1+I2_3_1+I2_4_1+I3_1_1+I3_2_1+I3_3_1+I3_4_1)/N1-
bet12*S2_1*(I1_1_2+I1_2_2+I1_3_2+I1_4_2+I2_1_2+I2_2_2+I2_3_2+I2_4_2+I3_1_2+I3_2_2+I3_3_2+I3_4_2)/N2
dS3_1 <- -bet1*S3_1*(I1_1_1+I1_2_1+I1_3_1+I1_4_1+I2_1_1+I2_2_1+I2_3_1+I2_4_1+I3_1_1+I3_2_1+I3_3_1+I3_4_1)/N1-
bet12*S3_1*(I1_1_2+I1_2_2+I1_3_2+I1_4_2+I2_1_2+I2_2_2+I2_3_2+I2_4_2+I3_1_2+I3_2_2+I3_3_2+I3_4_2)/N2
dEP1_1 <-  bet1*S1_1*(I1_1_1+I1_2_1+I1_3_1+I1_4_1+I2_1_1+I2_2_1+I2_3_1+I2_4_1+I3_1_1+I3_2_1+I3_3_1+I3_4_1)/N1+
bet12*S1_1*(I1_1_2+I1_2_2+I1_3_2+I1_4_2+I2_1_2+I2_2_2+I2_3_2+I2_4_2+I3_1_2+I3_2_2+I3_3_2+I3_4_2)/N2-
sigma1*EP1_1
dEP2_1 <-  bet1*S2_1*(I1_1_1+I1_2_1+I1_3_1+I1_4_1+I2_1_1+I2_2_1+I2_3_1+I2_4_1+I3_1_1+I3_2_1+I3_3_1+I3_4_1)/N1+
bet12*S2_1*(I1_1_2+I1_2_2+I1_3_2+I1_4_2+I2_1_2+I2_2_2+I2_3_2+I2_4_2+I3_1_2+I3_2_2+I3_3_2+I3_4_2)/N2-
sigma2*EP2_1
dEP3_1 <-  bet1*S3_1*(I1_1_1+I1_2_1+I1_3_1+I1_4_1+I2_1_1+I2_2_1+I2_3_1+I2_4_1+I3_1_1+I3_2_1+I3_3_1+I3_4_1)/N1+
bet12*S3_1*(I1_1_2+I1_2_2+I1_3_2+I1_4_2+I2_1_2+I2_2_2+I2_3_2+I2_4_2+I3_1_2+I3_2_2+I3_3_2+I3_4_2)/N2-
sigma3*EP3_1
dE1_1 <- sigma1*EP1_1-sigma1*E1_1
dE2_1 <- sigma2*EP2_1-sigma2*E2_1
dE3_1 <- sigma3*EP3_1-sigma3*E3_1
dIP1_1_1 <- sigma1*alfa1_1*E1_1-gama1*IP1_1_1
dIP1_2_1 <- sigma1*alfa1_2*E1_1-gama2*IP1_2_1
dIP1_3_1 <- sigma1*alfa1_3*E1_1-gama3*IP1_3_1
dIP1_4_1 <- sigma1*alfa1_4*E1_1-gama4*IP1_4_1
dIP2_1_1 <- sigma2*alfa2_1*E2_1-gama1*IP2_1_1
dIP2_2_1 <- sigma2*alfa2_2*E2_1-gama2*IP2_2_1
dIP2_3_1 <- sigma2*alfa2_3*E2_1-gama3*IP2_3_1
dIP2_4_1 <- sigma2*alfa2_4*E2_1-gama4*IP2_4_1
dIP3_1_1 <- sigma3*alfa3_1*E3_1-gama1*IP3_1_1
dIP3_2_1 <- sigma3*alfa3_2*E3_1-gama2*IP3_2_1
dIP3_3_1 <- sigma3*alfa3_3*E3_1-gama3*IP3_3_1
dIP3_4_1 <- sigma3*alfa3_4*E3_1-gama4*IP3_4_1
dI1_1_1 <- gama1*IP1_1_1-gama1*I1_1_1
dI1_2_1 <- gama2*IP1_2_1-gama2*I1_2_1
dI1_3_1 <- gama3*IP1_3_1-gama3*I1_3_1
dI1_4_1 <- gama4*IP1_4_1-gama4*I1_4_1
dI2_1_1 <- gama1*IP2_1_1-gama1*I2_1_1
dI2_2_1 <- gama2*IP2_2_1-gama2*I2_2_1
dI2_3_1 <- gama3*IP2_3_1-gama3*I2_3_1
dI2_4_1 <- gama4*IP2_4_1-gama4*I2_4_1
dI3_1_1 <- gama1*IP3_1_1-gama1*I3_1_1
dI3_2_1 <- gama2*IP3_2_1-gama2*I3_2_1
dI3_3_1 <- gama3*IP3_3_1-gama3*I3_3_1
dI3_4_1 <- gama4*IP3_4_1-gama4*I3_4_1
dD1_1 <- gama1*delta1*I1_1_1+gama2*delta2*I1_2_1+gama3*delta3*I1_3_1+gama4*delta4*I1_4_1
dD2_1 <- gama1*delta1*I2_1_1+gama2*delta2*I2_2_1+gama3*delta3*I2_3_1+gama4*delta4*I2_4_1
dD3_1 <- gama1*delta1*I3_1_1+gama2*delta2*I3_2_1+gama3*delta3*I3_3_1+gama4*delta4*I3_4_1
dR1_1 <- gama1*(1-delta1)*I1_1_1+gama2*(1-delta2)*I1_2_1+gama3*(1-delta3)*I1_3_1+gama4*(1-delta4)*I1_4_1
dR2_1 <- gama1*(1-delta1)*I2_1_1+gama2*(1-delta2)*I2_2_1+gama3*(1-delta3)*I2_3_1+gama4*(1-delta4)*I2_4_1
dR3_1 <- gama1*(1-delta1)*I3_1_1+gama2*(1-delta2)*I3_2_1+gama3*(1-delta3)*I3_3_1+gama4*(1-delta4)*I3_4_1
dY1_2_1 <- sigma1*alfa1_2*lambda1*E1_1
dY1_3_1 <- sigma1*alfa1_3*lambda1*E1_1
dY1_4_1 <- sigma1*alfa1_4*lambda1*E1_1
dY2_2_1 <- sigma2*alfa2_2*lambda2*E2_1
dY2_3_1 <- sigma2*alfa2_3*lambda2*E2_1
dY2_4_1 <- sigma2*alfa2_4*lambda2*E2_1
dY3_2_1 <- sigma3*alfa3_2*lambda3*E3_1
dY3_3_1 <- sigma3*alfa3_3*lambda3*E3_1
dY3_4_1 <- sigma3*alfa3_4*lambda3*E3_1
dS1_2 <- -bet1*S1_2*(I1_1_2+I1_2_2+I1_3_2+I1_4_2+I2_1_2+I2_2_2+I2_3_2+I2_4_2+I3_1_2+I3_2_2+I3_3_2+I3_4_2)/N2-
bet21*S1_2*(I1_1_1+I1_2_1+I1_3_1+I1_4_1+I2_1_1+I2_2_1+I2_3_1+I2_4_1+I3_1_1+I3_2_1+I3_3_1+I3_4_1)/N1
dS2_2 <- -bet1*S2_2*(I1_1_2+I1_2_2+I1_3_2+I1_4_2+I2_1_2+I2_2_2+I2_3_2+I2_4_2+I3_1_2+I3_2_2+I3_3_2+I3_4_2)/N2-
bet21*S2_2*(I1_1_1+I1_2_1+I1_3_1+I1_4_1+I2_1_1+I2_2_1+I2_3_1+I2_4_1+I3_1_1+I3_2_1+I3_3_1+I3_4_1)/N1
dS3_2 <- -bet1*S3_2*(I1_1_2+I1_2_2+I1_3_2+I1_4_2+I2_1_2+I2_2_2+I2_3_2+I2_4_2+I3_1_2+I3_2_2+I3_3_2+I3_4_2)/N2-
bet21*S3_2*(I1_1_1+I1_2_1+I1_3_1+I1_4_1+I2_1_1+I2_2_1+I2_3_1+I2_4_1+I3_1_1+I3_2_1+I3_3_1+I3_4_1)/N1
dEP1_2 <- bet1*S1_2*(I1_1_2+I1_2_2+I1_3_2+I1_4_2+I2_1_2+I2_2_2+I2_3_2+I2_4_2+I3_1_2+I3_2_2+I3_3_2+I3_4_2)/N2+
bet21*S1_2*(I1_1_1+I1_2_1+I1_3_1+I1_4_1+I2_1_1+I2_2_1+I2_3_1+I2_4_1+I3_1_1+I3_2_1+I3_3_1+I3_4_1)/N1-
sigma1*EP1_2
dEP2_2 <- bet1*S2_2*(I1_1_2+I1_2_2+I1_3_2+I1_4_2+I2_1_2+I2_2_2+I2_3_2+I2_4_2+I3_1_2+I3_2_2+I3_3_2+I3_4_2)/N2+
bet21*S2_2*(I1_1_1+I1_2_1+I1_3_1+I1_4_1+I2_1_1+I2_2_1+I2_3_1+I2_4_1+I3_1_1+I3_2_1+I3_3_1+I3_4_1)/N1-
sigma2*EP2_2
dEP3_2 <- bet1*S3_2*(I1_1_2+I1_2_2+I1_3_2+I1_4_2+I2_1_2+I2_2_2+I2_3_2+I2_4_2+I3_1_2+I3_2_2+I3_3_2+I3_4_2)/N2+
bet21*S3_2*(I1_1_1+I1_2_1+I1_3_1+I1_4_1+I2_1_1+I2_2_1+I2_3_1+I2_4_1+I3_1_1+I3_2_1+I3_3_1+I3_4_1)/N1-
sigma3*EP3_2
dE1_2 <- sigma1*EP1_2-sigma1*E1_2
dE2_2 <- sigma2*EP2_2-sigma2*E2_2
dE3_2 <- sigma3*EP3_2-sigma3*E3_2
dIP1_1_2 <- sigma1*alfa1_1*E1_2-gama1*IP1_1_2
dIP1_2_2 <- sigma1*alfa1_2*E1_2-gama2*IP1_2_2
dIP1_3_2 <- sigma1*alfa1_3*E1_2-gama3*IP1_3_2
dIP1_4_2 <- sigma1*alfa1_4*E1_2-gama4*IP1_4_2
dIP2_1_2 <- sigma2*alfa2_1*E2_2-gama1*IP2_1_2
dIP2_2_2 <- sigma2*alfa2_2*E2_2-gama2*IP2_2_2
dIP2_3_2 <- sigma2*alfa2_3*E2_2-gama3*IP2_3_2
dIP2_4_2 <- sigma2*alfa2_4*E2_2-gama4*IP2_4_2
dIP3_1_2 <- sigma3*alfa3_1*E3_2-gama1*IP3_1_2
dIP3_2_2 <- sigma3*alfa3_2*E3_2-gama2*IP3_2_2
dIP3_3_2 <- sigma3*alfa3_3*E3_2-gama3*IP3_3_2
dIP3_4_2 <- sigma3*alfa3_4*E3_2-gama4*IP3_4_2
dI1_1_2 <- gama1*IP1_1_2-gama1*I1_1_2
dI1_2_2 <- gama2*IP1_2_2-gama2*I1_2_2
dI1_3_2 <- gama3*IP1_3_2-gama3*I1_3_2
dI1_4_2 <- gama4*IP1_4_2-gama4*I1_4_2
dI2_1_2 <- gama1*IP2_1_2-gama1*I2_1_2
dI2_2_2 <- gama2*IP2_2_2-gama2*I2_2_2
dI2_3_2 <- gama3*IP2_3_2-gama3*I2_3_2
dI2_4_2 <- gama4*IP2_4_2-gama4*I2_4_2
dI3_1_2 <- gama1*IP3_1_2-gama1*I3_1_2
dI3_2_2 <- gama2*IP3_2_2-gama2*I3_2_2
dI3_3_2 <- gama3*IP3_3_2-gama3*I3_3_2
dI3_4_2 <- gama4*IP3_4_2-gama4*I3_4_2
dD1_2 <- gama1*delta1*I1_1_2+gama2*delta2*I1_2_2+gama3*delta3*I1_3_2+gama4*delta4*I1_4_2
dD2_2 <- gama1*delta1*I2_1_2+gama2*delta2*I2_2_2+gama3*delta3*I2_3_2+gama4*delta4*I2_4_2
dD3_2 <- gama1*delta1*I3_1_2+gama2*delta2*I3_2_2+gama3*delta3*I3_3_2+gama4*delta4*I3_4_2
dR1_2 <- gama1*(1-delta1)*I1_1_2+gama2*(1-delta2)*I1_2_2+gama3*(1-delta3)*I1_3_2+gama4*(1-delta4)*I1_4_2
dR2_2 <- gama1*(1-delta1)*I2_1_2+gama2*(1-delta2)*I2_2_2+gama3*(1-delta3)*I2_3_2+gama4*(1-delta4)*I2_4_2
dR3_2 <- gama1*(1-delta1)*I3_1_2+gama2*(1-delta2)*I3_2_2+gama3*(1-delta3)*I3_3_2+gama4*(1-delta4)*I3_4_2
dY1_2_2 <- sigma1*alfa1_2*lambda1*E1_2
dY1_3_2 <- sigma1*alfa1_3*lambda1*E1_2
dY1_4_2 <- sigma1*alfa1_4*lambda1*E1_2
dY2_2_2 <- sigma2*alfa2_2*lambda2*E2_2
dY2_3_2 <- sigma2*alfa2_3*lambda2*E2_2
dY2_4_2 <- sigma2*alfa2_4*lambda2*E2_2
dY3_2_2 <- sigma3*alfa3_2*lambda3*E3_2
dY3_3_2 <- sigma3*alfa3_3*lambda3*E3_2
dY3_4_2 <- sigma3*alfa3_4*lambda3*E3_2
res<-c(dS1_1,
dS2_1,
dS3_1,
dEP1_1,
dEP2_1,
dEP3_1,
dE1_1,
dE2_1,
dE3_1,
dIP1_1_1,
dIP1_2_1,
dIP1_3_1,
dIP1_4_1,
dIP2_1_1,
dIP2_2_1,
dIP2_3_1,
dIP2_4_1,
dIP3_1_1,
dIP3_2_1,
dIP3_3_1,
dIP3_4_1,
dI1_1_1,
dI1_2_1,
dI1_3_1,
dI1_4_1,
dI2_1_1,
dI2_2_1,
dI2_3_1,
dI2_4_1,
dI3_1_1,
dI3_2_1,
dI3_3_1,
dI3_4_1,
dD1_1,
dD2_1,
dD3_1,
dR1_1,
dR2_1,
dR3_1,
dY1_2_1,
dY1_3_1,
dY1_4_1,
dY2_2_1,
dY2_3_1,
dY2_4_1,
dY3_2_1,
dY3_3_1,
dY3_4_1,
dS1_2,
dS2_2,
dS3_2,
dEP1_2,
dEP2_2,
dEP3_2,
dE1_2,
dE2_2,
dE3_2,
dIP1_1_2,
dIP1_2_2,
dIP1_3_2,
dIP1_4_2,
dIP2_1_2,
dIP2_2_2,
dIP2_3_2,
dIP2_4_2,
dIP3_1_2,
dIP3_2_2,
dIP3_3_2,
dIP3_4_2,
dI1_1_2,
dI1_2_2,
dI1_3_2,
dI1_4_2,
dI2_1_2,
dI2_2_2,
dI2_3_2,
dI2_4_2,
dI3_1_2,
dI3_2_2,
dI3_3_2,
dI3_4_2,
dD1_2,
dD2_2,
dD3_2,
dR1_2,
dR2_2,
dR3_2,
dY1_2_2,
dY1_3_2,
dY1_4_2,
dY2_2_2,
dY2_3_2,
dY2_4_2,
dY3_2_2,
dY3_3_2,
dY3_4_2,
bet1, bet2, bet12, bet21)
list(res) }
) }
out <- lsoda(X_ini, t, SEIRmod, theta,
events = list(func=evenfun, time=tiempos))
#out[which(out[,3]<0),3]<-0
return(out)
}
##############################
N1 = 10000
N2 = 90000
alfa <- matrix(c(0.3,0.55,0.1,0.05,0.3,0.55,0.1,0.05,0.3,0.55,0.1,0.05),4,3) #carlos
alfa <- t(t(alfa)*c(0.33,0.66,1))  #diminuyo por grupo de edad
alfa[1,] <- 1- colSums(alfa[2:4,])
colSums(alfa)  #tienen que ser un vector de 1's
alfa <- as.vector(alfa)
names(alfa) <- paste0("alfa",rep(1:3,each=4), "_", rep(1:4, 3))
theta<-c(sigma1 = 0.4
,sigma2 = 0.4
,sigma3 = 0.4
,gama1 =  0.36#1/14
,gama2 =  0.25#1/21
,gama3 =  0.21#1/25
,gama4 =  0.21#1/25
,alfa
,delta1 = 0.001
,delta2 = 0.01
,delta3 = 0.15
,delta4 = 0.55
,lambda1= 0.1
,lambda2= 0.1
,lambda3= 0.1
, EI= 10
, EI1= 10
, EI2= 10
, N1=N1
, N2=N2
)
X_ini<-c(S1_1=N1/4-10
, S2_1=N1*2/4-10
, S3_1=N1/4-10
, EP1_1=0
, EP2_1=0
, EP3_1=0
, E1_1=0
, E2_1=0
, E3_1=0
, IP1_1_1=5
, IP1_2_1=2
, IP1_3_1=2
, IP1_4_1=1
, IP2_1_1=2
, IP2_2_1=5
, IP2_3_1=2
, IP2_4_1=1
, IP3_1_1=0
, IP3_2_1=1
, IP3_3_1=4
, IP3_4_1=5
, I1_1_1=0
, I1_2_1=0
, I1_3_1=0
, I1_4_1=0
, I2_1_1=0
, I2_2_1=0
, I2_3_1=0
, I2_4_1=0
, I3_1_1=0
, I3_2_1=0
, I3_3_1=0
, I3_4_1=0
, D1_1=0
, D2_1=0
, D3_1=0
, R1_1=2.5
, R2_1=2.5
, R3_1=2.5
, Y1_2_1=2
, Y1_3_1=2
, Y1_4_1=1
, Y2_2_1=5
, Y2_3_1=2
, Y2_4_1=1
, Y3_2_1=1
, Y3_3_1=4
, Y3_4_1=5
, S1_2=N2/4-10
, S2_2=N2*2/4-10
, S3_2=N2/4-10
, EP1_2=0
, EP2_2=0
, EP3_2=0
, E1_2=0
, E2_2=0
, E3_2=0
, IP1_1_2=5
, IP1_2_2=2
, IP1_3_2=2
, IP1_4_2=1
, IP2_1_2=2
, IP2_2_2=5
, IP2_3_2=2
, IP2_4_2=1
, IP3_1_2=0
, IP3_2_2=1
, IP3_3_2=4
, IP3_4_2=5
, I1_1_2=0
, I1_2_2=0
, I1_3_2=0
, I1_4_2=0
, I2_1_2=0
, I2_2_2=0
, I2_3_2=0
, I2_4_2=0
, I3_1_2=0
, I3_2_2=0
, I3_3_2=0
, I3_4_2=0
, D1_2=0
, D2_2=0
, D3_2=0
, R1_2=2.5
, R2_2=2.5
, R3_2=2.5
, Y1_2_2=2
, Y1_3_2=2
, Y1_4_2=1
, Y2_2_2=5
, Y2_3_2=2
, Y2_4_2=1
, Y3_2_2=1
, Y3_3_2=4
, Y3_4_2=5
)
sum(X_ini[-grep('Y',names(X_ini))]) #bien
X_ini <- c(X_ini, rep(3, 4))
names(X_ini)[ (length(X_ini)-3):length(X_ini)] <- c('bet1', 'bet2', 'bet12', 'bet21')
X_ini
#source("ModeloMigracion_2pErlang.R")
days <- 50
tiempos <- seq(0, days ,length = days*100+1)
sim <- X_theta(theta, tiempos, X_ini)
xx<-seq(1,days,1)
colnames(sim)
colnames(sim[, 11:34])
plot(tiempos, apply(sim[, 11:34], 1, sum), type='l')
